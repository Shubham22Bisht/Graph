class UnionFind {
    vector<int> rank, parent;
public:
    UnionFind(int n) {
        rank.resize(n, 1);
        parent.resize(n);
        for (int i = 0; i <n; i++) {
            parent[i] = i;
        }
    }

    int find(int x) {
       while(x!=parent[x]){
            x=parent[x];
        }
        return x;
    }

    void union(int u, int v) {
        int p1 = find(u);
        int p2 = find(v);
        if (p1==p2) return false;
        if (rank[p1] > rank[p2]) {
            parent[p2] = p1;
            rank[p1]+=rank[p2];
        }
        else {
           parent[p1] = p2;
           rank[p2] += rank[p1];
        }
        return true;
    }
};
